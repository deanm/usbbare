enum {
  Device;
  Interface;
  Endpoint;
  Other;
} RequestTypeRecipient;

enum {
  DEVICE = 1;
  CONFIGURATION = 2;
  STRING = 3;
  INTERFACE = 4;
  ENDPOINT = 5;
  DEVICE_QUALIFIER = 6;
  OTHER_SPEED_CONFIGURATION = 7;
  INTERFACE_POWER = 8;
} DescriptorTypes;

enum {
  Standard;
  Class;
  Vendor;
  Reserved;
} RequestTypeType;

enum {
  HostToDevice;
  DeviceToHost;
} RequestTypeTransferDirection;

struct {
  RequestTypeRecipient recipient:5;
  RequestTypeType type:2;
  RequestTypeTransferDirection transferDirection:1;
} bmRequestType;

// 9.4 Standard Device Requests
// bmRequestType and bRequest combined
// D_ Device, I_ Interface, E_ Endpoint
enum {
  D_CLEAR_FEATURE = 0x0001;
  I_CLEAR_FEATURE = 0x0101;
  E_CLEAR_FEATURE = 0x0201;
  //D_GET_CONFIGURATION = 0x8008;
  GET_CONFIGURATION = 0x8008;
  //D_GET_DESCRIPTOR = 0x8006;
  GET_DESCRIPTOR = 0x8006;
  //I_GET_INTERFACE = 0x810a;
  GET_INTERFACE = 0x810a;
  D_GET_STATUS = 0x8000;
  I_GET_STATUS = 0x8100;
  E_GET_STATUS = 0x8200;
  //D_SET_ADDRESS = 0x0005;
  SET_ADDRESS = 0x0005;
  //D_SET_CONFIGURATION = 0x0009;
  SET_CONFIGURATION = 0x0009;
  //D_SET_DESCRIPTOR = 0x0007;
  SET_DESCRIPTOR = 0x0007;
  D_SET_FEATURE = 0x0003;
  I_SET_FEATURE = 0x0103;
  E_SET_FEATURE = 0x0203;
  //I_SET_INTERFACE = 0x010b;
  SET_INTERFACE = 0x010b;
  //E_SYNCH_FRAME = 0x820c;
  SYNCH_FRAME = 0x820c;
} StandardDeviceRequests;

// 11.24.2 Class-specific Requests
enum {
  ClearHubFeature = 0x2001;
  ClearPortFeature = 0x2301;
  ClearTTBuffer = 0x2308;
  GetHubDescriptor = 0xa006;
  GetHubStatus = 0xa000;
  GetPortStatus = 0xa300;
  ResetTT = 0x2309;
  SetHubDescriptor = 0x2007;
  SetHubFeature = 0x2003;
  SetPortFeature = 0x2303;
  GetTTState = 0xa30a;
  StopTT = 0x230b;
} ClassSpecificRequests;

enum {
  C_HUB_LOCAL_POWER = 0;
  C_HUB_OVER_CURRENT = 1;
} HubClassFeatureSelectorsHub;

enum {
  PORT_CONNECTION = 0;
  PORT_ENABLE = 1;
  PORT_SUSPEND = 2;
  PORT_OVER_CURRENT = 3;
  PORT_RESET = 4;
  PORT_POWER = 8;
  PORT_LOW_SPEED = 9;
  C_PORT_CONNECTION = 16;
  C_PORT_ENABLE = 17;
  C_PORT_SUSPEND = 18;
  C_PORT_OVER_CURRENT = 19;
  C_PORT_RESET = 20;
  PORT_TEST = 21;
  PORT_INDICATOR = 22;
} HubClassFeatureSelectorsPort;

// HID1_11.pdf
enum {
  GET_REPORT = 0xa101;
  SET_REPORT = 0x2109;
} ClassSpecificHIDRequests;

struct {
  bmRequestType bmRequestType:8;
  uint bRequest:8;
  uint wValue:16;
  uint wIndex:16;
  uint wLength:16;
} setup;

struct {
  uint ADDR:7;
  uint EndPoint:4;
  uint CRC5:5;
} TokenPacket;

struct {
  uint FrameNumber:11;
  uint CRC5:5;
} StartOfFramePacket;

struct {
  uint bLength:8;
  uint bDescriptorType:8;
  uint bcdUSB:16;
  uint bDeviceClass:8;
  uint bDeviceSubClass:8;
  uint bDeviceProtocol:8;
  uint bMaxPacketSize0:8;
  uint idVendor:16;
  uint idProduct:16;
  uint bcdDevice:16;
  uint iManufacturer:8;
  uint iProduct:8;
  uint iSerialNumber:8;
  uint bNumConfigurations:8;
} StandardDeviceDescriptor;

struct {
  uint Reserved0:5;
  uint RemoteWakeup:1;
  uint SelfPowered:1;
  uint Reserved1:1;
} StandardConfigurationDescriptorAttributes;
struct {
  uint bLength:8;
  uint bDescriptorType:8;
  uint wTotalLength:16;
  uint bNumInterfaces:8;
  uint bConfigurationValue:8;
  uint iConfiguration:8;
  StandardConfigurationDescriptorAttributes bmAttributes:8;
  uint bMaxPower:8;
} StandardConfigurationDescriptor;

enum {
  DefinedAtInterfaceLevel = 0;
  Audio = 1;
  Communications = 2;
  HumanInterfaceDevice = 3;
  PhysicalInterfaceDevice = 5;
  Imaging = 6;
  Printer = 7;
  MassStorage = 8;
  Hub = 9;
  CDCData = 10;
  ChipSmartCard = 11;
  ContentSecurity = 13;
  Video = 14;
  Xbox = 88;
  Diagnostic = 220;
  Wireless = 224;
  MiscellaneousDevice = 239;
  ApplicationSpecificInterface = 254;
  VendorSpecificClass = 255;
} InterfaceClass;

enum {
  ControlDevice = 1;
  Streaming = 2;
  MIDIStreaming = 3;
} InterfaceSubclassAudio;

enum {
  DirectLine = 1;
  Abstractmodem = 2;
  Telephone = 3;
  MultiChannel = 4;
  CAPIControl = 5;
  EthernetNetworking = 6;
  ATMNetworking = 7;
  WirelessHandsetControl = 8;
  DeviceManagement = 9;
  MobileDirectLine = 10;
  OBEX = 11;
  EthernetEmulation = 12;
} InterfaceSubclassCommunications;

enum {
  None = 0;
  ATCommandsv25ter = 1;
  ATCommandsPCCA101 = 2;
  ATCommandsPCCA101Wakeup = 3;
  ATCommandsGSM = 4;
  ATCommands3G = 5;
  ATCommandsCDMA = 6;
  DefinedByCommandSetDescriptor = 254;
  VendorSpecificMSFTRNDIS = 255;
} InterfaceSubclassCommunicationsProtocolAbstractmodem;

enum {
  EthernetEmulationEEM = 7;
} InterfaceSubclassCommunicationsProtocolEthernetEmulation;

enum {
  NoSubclass = 0;
  BootInterfaceSubclass = 1;
} InterfaceSubclassHumanInterfaceDevice;

enum {
  None = 0;
  Keyboard = 1;
  Mouse = 2;
} InterfaceSubclassHumanInterfaceDeviceProtocolNoSubclass;

enum {
  None = 0;
  Keyboard = 1;
  Mouse = 2;
} InterfaceSubclassHumanInterfaceDeviceProtocolBootInterfaceSubclass;

enum {
  StillImageCapture = 1;
} InterfaceSubclassImaging;

enum {
  PictureTransferProtocolPIMA15470 = 1;
} InterfaceSubclassImagingProtocolStillImageCapture;

enum {
  Printer = 1;
} InterfaceSubclassPrinter;

enum {
  ReservedUndefined = 0;
  Unidirectional = 1;
  Bidirectional = 2;
  IEEE12844CompatibleBidirectional = 3;
  VendorSpecific = 255;
} InterfaceSubclassPrinterProtocolPrinter;

enum {
  RBCtypicallyFlash = 1;
  SFF8020iMMC2ATAPI = 2;
  QIC157 = 3;
  FloppyUFI = 4;
  SFF8070i = 5;
  SCSI = 6;
} InterfaceSubclassMassStorage;

enum {
  ControlBulkInterrupt = 0;
  ControlBulk = 1;
  BulkOnly = 80;
} InterfaceSubclassMassStorageProtocolRBCtypicallyFlash;

enum {
  ControlBulkInterrupt = 0;
  ControlBulk = 1;
  BulkOnly = 80;
} InterfaceSubclassMassStorageProtocolFloppyUFI;

enum {
  ControlBulkInterrupt = 0;
  ControlBulk = 1;
  BulkOnly = 80;
} InterfaceSubclassMassStorageProtocolSCSI;

enum {
  Unused = 0;
} InterfaceSubclassHub;

enum {
  FullSpeedorRootHub = 0;
  SingleTT = 1;
  TTPerPort = 2;
} InterfaceSubclassHubProtocolUnused;

enum {
  Unused = 0;
} InterfaceSubclassCDCData;

enum {
  I430ISDNBRI = 48;
  HDLC = 49;
  Transparent = 50;
  Q921M = 80;
  Q921 = 81;
  Q921TM = 82;
  V42bis = 144;
  Q932EuroISDN = 145;
  V120V24RateISDN = 146;
  CAPI20 = 147;
  HostBasedDriver = 253;
  CDCPUF = 254;
  VendorSpecific = 255;
} InterfaceSubclassCDCDataProtocolUnused;

enum {
  Undefined = 0;
  VideoControl = 1;
  VideoStreaming = 2;
  VideoInterfaceCollection = 3;
} InterfaceSubclassVideo;

enum {
  Controller = 66;
} InterfaceSubclassXbox;

enum {
  ReprogrammableDiagnostics = 1;
} InterfaceSubclassDiagnostic;

enum {
  USB2Compliance = 1;
} InterfaceSubclassDiagnosticProtocolReprogrammableDiagnostics;

enum {
  RadioFrequency = 1;
  WirelessUSBWireAdapter = 2;
} InterfaceSubclassWireless;

enum {
  Bluetooth = 1;
  UltraWideBandRadioControl = 2;
  RNDIS = 3;
} InterfaceSubclassWirelessProtocolRadioFrequency;

enum {
  HostWireAdapterControlDataStreaming = 1;
  DeviceWireAdapterControlDataStreaming = 2;
  DeviceWireAdapterIsochronousStreaming = 3;
} InterfaceSubclassWirelessProtocolWirelessUSBWireAdapter;

enum {
  Unknown1 = 1;
  Unknown2 = 2;
  Unknown3 = 3;
  USB3Vision = 5;
} InterfaceSubclassMiscellaneousDevice;

enum {
  MicrosoftActiveSync = 1;
  PalmSync = 2;
} InterfaceSubclassMiscellaneousDeviceProtocolUnknown1;

enum {
  InterfaceAssociation = 1;
  WireAdapterMultifunctionPeripheral = 2;
} InterfaceSubclassMiscellaneousDeviceProtocolUnknown2;

enum {
  CableBasedAssociation = 1;
} InterfaceSubclassMiscellaneousDeviceProtocolUnknown3;

enum {
  DeviceFirmwareUpdate = 1;
  IRDABridge = 2;
  TestAndMeasurement = 3;
} InterfaceSubclassApplicationSpecificInterface;

enum {
  TMC = 1;
  USB488 = 2;
} InterfaceSubclassApplicationSpecificInterfaceProtocolTestAndMeasurement;

enum {
  VendorSpecificSubclass = 255;
} InterfaceSubclassVendorSpecificClass;

enum {
  VendorSpecificProtocol = 255;
} InterfaceSubclassVendorSpecificClassProtocolVendorSpecificSubclass;

struct {
  uint bLength:8;
  uint bDescriptorType:8;
  uint bInterfaceNumber:8;
  uint bAlternateSetting:8;
  uint bNumEndpoints:8;
  InterfaceClass bInterfaceClass:8;
  uint bInterfaceSubClass:8;
  uint bInterfaceProtocol:8;
  uint iInterface:8;
} StandardInterfaceDescriptor;

enum {
  Control;
  Isochronous;
  Bulk;
  Interrupt;
} StandardEndpointDescriptorAttributesTransferType;

enum {
  NoSynchronization;
  Asynchronous;
  Adaptive;
  Synchronous;
} StandardEndpointDescriptorAttributesSynchronizationType;

enum {
  DataEndpoint;
  FeedbackEndpoint;
  ImplicitFeedbackDataEndpoint;
  Reserved;
} StandardEndpointDescriptorAttributesUsageType;

struct {
  StandardEndpointDescriptorAttributesTransferType TransferType:2;
  StandardEndpointDescriptorAttributesSynchronizationType SynchronizationType:2;
  StandardEndpointDescriptorAttributesUsageType UsageType:2;
  uint Reserved:2;
} StandardEndpointDescriptorAttributes;

enum {
  OUT;
  IN;
} StandardEndpointDescriptorEndpointAddressDirection;

struct {
  uint EndpointNumber:4;
  uint Reserved:3;
  StandardEndpointDescriptorEndpointAddressDirection Direction:1;  // Ignored for control endpoints.
} StandardEndpointDescriptorEndpointAddress;

struct {
  uint bLength:8;
  uint bDescriptorType:8;
  StandardEndpointDescriptorEndpointAddress bEndpointAddress:8;
  StandardEndpointDescriptorAttributes bmAttributes:8;
  uint wMaxPacketSize:8;
  uint bInterval:8;
  uint bLength:8;

} StandardEndpointDescriptor;

// 11.23.2.1 Hub Descriptor
struct {
  uint bDescLength:8;
  uint bDescriptorType:8;
  uint bNbrPorts:8;
  uint wHubCharacteristics:16;
  uint bPwrOn2PwrGood:8;
  uint bHubContrCurrent:8;
  // DeviceRemovable:variable
  // PortPwrCtrlMask:variable
} HubDescriptorHeader;

// 11.24.2.6 Get Hub Status
enum {
  Good = 0;
  Lost = 1;
} HubStatusHubStatusLocalPowerSource;

enum {
  NoOverCurrent = 0;
  OverCurrent = 1;
} HubStatusHubStatusOverCurrent;

struct {
  HubStatusHubStatusLocalPowerSource LocalPowerSource:1;
  HubStatusHubStatusOverCurrent OverCurrent:1;
  uint Reserved:14;
} HubStatusHubStatus;

struct {
  uint LocalPowerStatusChange:1;
  uint OverCurrentChange:1;
  uint Reserved:14;
} HubStatusHubChange;

struct {
  HubStatusHubStatus wHubStatus:16;
  HubStatusHubChange wHubChange:16;
} HubStatus;

// 11.24.2.7 Get Port Status
struct {
  uint Connection:1;
  uint Enabled:1;
  uint Suspended:1;
  uint OverCurrent:1;
  uint Reset:1;
  uint Reserved0:3;
  uint Power:1;
  uint LowSpeed:1;
  uint HighSpeed:1;
  uint Test:1;
  uint Indicator:1;
  uint Reserved1:3;
} HubPortStatusPortStatus;

struct {
  HubPortStatusPortStatus wPortStatus:16;
  HubPortStatusPortStatus wPortChange:16;
} HubPortStatus;
